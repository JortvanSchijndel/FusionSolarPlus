from homeassistant.components.sensor import SensorDeviceClass, SensorStateClass

POWER_SENSOR_SIGNALS = [
    {
        "id": 10001,
        "name": "Meter status",
        "custom_name": "Meter Status",
        "device_class": SensorDeviceClass.ENUM,
        "unit": None,
    },
    {
        "id": 10008,
        "name": "Positive active energy",
        "unit": "kWh",
        "custom_name": "Positive Active Energy",
        "device_class": SensorDeviceClass.ENERGY,
        "state_class": SensorStateClass.TOTAL_INCREASING,
    },
    {
        "id": 10009,
        "name": "Negative active energy",
        "unit": "kWh",
        "custom_name": "Negative Active Energy",
        "device_class": SensorDeviceClass.ENERGY,
        "state_class": SensorStateClass.TOTAL_INCREASING,
    },
    {
        "id": 10005,
        "name": "Reactive power",
        "unit": "var",
        "custom_name": "Reactive Power",
        "device_class": SensorDeviceClass.REACTIVE_POWER,
        "state_class": SensorStateClass.MEASUREMENT,
    },
    {
        "id": 10004,
        "name": "Active power",
        "unit": "W",
        "custom_name": "Active Power",
        "device_class": SensorDeviceClass.POWER,
        "state_class": SensorStateClass.MEASUREMENT,
    },
    {
        "id": 10006,
        "name": "Power factor",
        "custom_name": "Power Factor",
        "unit": None,
        "device_class": SensorDeviceClass.POWER_FACTOR,
        "state_class": SensorStateClass.MEASUREMENT,
    },
    {
        "id": 10019,
        "name": "Phase A active power",
        "unit": "W",
        "custom_name": "Phase A Active Power",
        "device_class": SensorDeviceClass.POWER,
        "state_class": SensorStateClass.MEASUREMENT,
    },
    {
        "id": 10020,
        "name": "Phase B active power",
        "unit": "W",
        "custom_name": "Phase B Active Power",
        "device_class": SensorDeviceClass.POWER,
        "state_class": SensorStateClass.MEASUREMENT,
    },
    {
        "id": 10021,
        "name": "Phase C active power",
        "unit": "W",
        "custom_name": "Phase C Active Power",
        "device_class": SensorDeviceClass.POWER,
        "state_class": SensorStateClass.MEASUREMENT,
    },
    {
        "id": 10002,
        "name": "Phase A voltage",
        "unit": "V",
        "custom_name": "Phase A Voltage",
        "device_class": SensorDeviceClass.VOLTAGE,
        "state_class": SensorStateClass.MEASUREMENT,
    },
    {
        "id": 10010,
        "name": "Phase B voltage",
        "unit": "V",
        "custom_name": "Phase B Voltage",
        "device_class": SensorDeviceClass.VOLTAGE,
        "state_class": SensorStateClass.MEASUREMENT,
    },
    {
        "id": 10011,
        "name": "Phase C voltage",
        "unit": "V",
        "custom_name": "Phase C Voltage",
        "device_class": SensorDeviceClass.VOLTAGE,
        "state_class": SensorStateClass.MEASUREMENT,
    },
    {
        "id": 10003,
        "name": "Phase A current",
        "unit": "A",
        "custom_name": "Phase A Current",
        "device_class": SensorDeviceClass.CURRENT,
        "state_class": SensorStateClass.MEASUREMENT,
    },
    {
        "id": 10012,
        "name": "Phase B current",
        "unit": "A",
        "custom_name": "Phase B Current",
        "device_class": SensorDeviceClass.CURRENT,
        "state_class": SensorStateClass.MEASUREMENT,
    },
    {
        "id": 10013,
        "name": "Phase C current",
        "unit": "A",
        "custom_name": "Phase C Current",
        "device_class": SensorDeviceClass.CURRENT,
        "state_class": SensorStateClass.MEASUREMENT,
    },
    {
        "id": 10007,
        "name": "Grid frequency",
        "unit": "Hz",
        "custom_name": "Grid Frequency",
        "device_class": SensorDeviceClass.FREQUENCY,
        "state_class": SensorStateClass.MEASUREMENT,
    },
]
